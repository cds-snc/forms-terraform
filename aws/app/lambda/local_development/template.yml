AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: SAM template for local lambda testing for GC Forms

Parameters:
  AppName:
    Type: String
    Description: Name of application (no spaces). Value must be globally unique
    Default: FormsTest
  DBUser:
    Type: AWS::SSM::Parameter::Value<String>
    Default: "postgres"
  DBPassword:
    Type: AWS::SSM::Parameter::Value<String>
    Default: "chummy"
  DBHost:
    Type: AWS::SSM::Parameter::Value<String>
    Default: "host.docker.internal"
  DBName:
    Type: AWS::SSM::Parameter::Value<String>
    Default: "formsDB"
  TOKEN_SECRET:
    Type: AWS::SSM::Parameter::Value<String>
    Default: "somesecretstring"
  SQS_URL:
    Type: AWS::SSM::Parameter::Value<String>
    Default: "http://host.docker.internal:4566/000000000000/submission_processing.fifo"
  NOTIFY_API_KEY:
    Type: AWS::SSM::Parameter::Value<String>
    Default: "NOTIFY API KEY"
  TEMPLATE_ID:
    Type: String
    Default: "8d597a1b-a1d6-4e3c-8421-042a2b4158b7"
  TEMPORARY_TOKEN_TEMPLATE_ID:
    Type: String
    Default: "b6885d06-d10a-422a-973f-05e274d9aa86"

Globals:
  Function:
    Runtime: nodejs14.x
    Tags:
      Environment:
        Ref: Environment
        Name:
          Ref: AppName

Resources:
  Templates:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Fn::Sub: ${Environment}-${AppName}-templates
      CodeUri: ../templates/
      Handler: templates.handler
      Layers:
        - Ref: TemplatesLayer
      Environment:
        Variables:
          PGUSER:
            Ref: DBUser
          PGPASSWORD:
            Ref: DBPassword
          PGHOST:
            Ref: DBHost
          PGDATABASE:
            Ref: DBName
          TOKEN_SECRET:
            Ref: TOKEN_SECRET

  Submission:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Fn::Sub: ${Environment}-${AppName}-submission
      CodeUri: ../submission/
      Handler: submission.handler
      Layers:
        - Ref: SubmissionLayer
      Environment:
        Variables:
          SQS_URL:
            Ref: SQS_URL

  Reliability:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Fn::Sub: ${Environment}-${AppName}-reliability
      CodeUri: ../reliability/
      Handler: reliability.handler
      Timeout: 300
      Layers:
        - Ref: ReliabilityLayer
      Environment:
        Variables:
          NOTIFY_API_KEY:
            Ref: NOTIFY_API_KEY

  Archiver:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Fn::Sub: ${Environment}-${AppName}-Archiver
      CodeUri: ../archive_form_responses/
      Handler: archiver.handler
      Layers:
        - Ref: ArchiverLayer
      Environment:
        Variables:
          DYNAMODB_VAULT_TABLE_NAME:
            Ref: Vault
          ARCHIVING_S3_BUCKET:
            Ref: forms-local-archive-storage
          SNS_ERROR_TOPIC_ARN:
            Ref: arn:aws:sns:us-east-1:000000000000:alert-critical

  TemplatesLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName:
        Fn::Sub: ${Environment}-${AppName}-templates-layer
      ContentUri: ../templates/
      CompatibleRuntimes:
        - nodejs14.x

  SubmissionLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName:
        Fn::Sub: ${Environment}-${AppName}-submission-layer
      ContentUri: ../submission/
      CompatibleRuntimes:
        - nodejs14.x

  ReliabilityLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName:
        Fn::Sub: ${Environment}-${AppName}-reliability-layer
      ContentUri: ../reliability/
      CompatibleRuntimes:
        - nodejs14.x

  ArchiverLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName:
        Fn::Sub: ${Environment}-${AppName}-archiver-layer
      ContentUri: ../archive_form_responses/
      CompatibleRuntimes:
        - nodejs14.x
