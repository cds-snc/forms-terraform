name: "Terraform"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

defaults:
  run:
    shell: bash
    working-directory: forms/aws

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ca-central-1
  TF_VAR_ecs_secret_notify_api_key: ${{ secrets.NOTIFY_API_KEY }}
  TF_VAR_ecs_secret_google_client_id: ${{ secrets.GOOGLE_CLIENT_ID}}
  TF_VAR_ecs_secret_google_client_secret: ${{secrets.GOOGLE_CLIENT_SECRET}}
  TF_VAR_rds_db_password: ${{secrets.DB_PASSWORD}}
  TF_VAR_slack_webhook: ${{ secrets.SLACK_WEBHOOK }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  terraform-plan:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ~0.14.0
          terraform_wrapper: false

      - name: Terraform Plan
        uses: cds-snc/terraform-plan@v1
        with:
          directory: ./forms/aws
          github-token: ${{ secrets.GITHUB_TOKEN }}

  terraform-security-scan:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    continue-on-error: false
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Terraform security scan
        uses: triat/terraform-security-scan@v3.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  terraform-apply:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ~0.14.0

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Init
        run: |
          terraform init

      - name: Install Node packages for Submission
        run: yarn --cwd "./lambda/submission/nodejs" install

      - name: Install Node packages for Reliability
        run: yarn --cwd "./lambda/reliability/nodejs" install

      - name: Install Node packages for Templates
        run: yarn --cwd "./lambda/templates/nodejs" install

      - name: Install Node packages for Organisations
        run: yarn --cwd "./lambda/organisations/nodejs" install

      - name: Install Node packages for Retrieval
        run: yarn --cwd "./lambda/retrieval/nodejs" install

      - name: Install Python packages for Load Testing
        run: |
          cd ./lambda/load_testing
          pip3 install invokust --target .
          cd ../..

      - name: Terraform Plan
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: terraform plan -out terraform.tfplan

      - name: Terraform Apply
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: terraform apply -auto-approve terraform.tfplan
