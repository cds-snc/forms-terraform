name: "Terragrunt plan PRODUCTION"

on:
  pull_request:
    branches: [main]

env:
  AWS_REGION: ca-central-1
  AWS_ACCESS_KEY_ID: ${{ secrets.PRODUCTION_AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.PRODUCTION_AWS_SECRET_ACCESS_KEY }}
  CONFTEST_VERSION: 0.27.0
  TERRAFORM_VERSION: 1.3.3
  TERRAGRUNT_VERSION: 0.35.6
  TF_INPUT: false
  TF_VAR_ecs_secret_token_secret: ${{ secrets.PRODUCTION_TOKEN_SECRET }}
  TF_VAR_google_client_id: ${{ secrets.PRODUCTION_GOOGLE_CLIENT_ID}}
  TF_VAR_google_client_secret: ${{secrets.PRODUCTION_GOOGLE_CLIENT_SECRET}}
  TF_VAR_recaptcha_secret: ${{secrets.PRODUCTION_RECAPTCHA_SITE_SECRET}}
  TF_VAR_recaptcha_public: 6LfJDN4eAAAAAGvdRF7ZnQ7ciqdo1RQnQDFmh0VY
  TF_VAR_notify_api_key: ${{ secrets.PRODUCTION_NOTIFY_API_KEY }}
  TF_VAR_rds_db_password: ${{ secrets.PRODUCTION_DB_PASSWORD }}
  TF_VAR_slack_webhook: ${{ secrets.PRODUCTION_SLACK_WEBHOOK }}
  TF_VAR_gc_notify_callback_bearer_token: ${{ secrets.PRODUCTION_GC_NOTIFY_CALLBACK_BEARER_TOKEN }}
  TF_VAR_gc_temp_token_template_id: 61cec9c4-64ca-4e4d-b4d2-a0e931c44422
  TF_VAR_gc_template_id: 92096ac6-1cc5-40ae-9052-fffdb8439a90

jobs:
  # Check the VERSION file to get the target version to deploy and previously deployed version.
  # These are used to determine which Terraform modules need to have `terraform plan` run.
  version-manifest:
    uses: cds-snc/forms-terraform/.github/workflows/version-manifest.yml@main

  # Create a comment with a link showing the diff between versions
  diff-comment:
    needs: version-manifest
    uses: cds-snc/forms-terraform/.github/workflows/diff-comment.yml@main
    with:
      base: ${{ needs.version-manifest.outputs.previous }}
      ref: ${{ needs.version-manifest.outputs.current }}

  terragrunt-plan:
    needs: version-manifest
    runs-on: ubuntu-latest
    env:
      TARGET_VERSION: ${{ needs.version-manifest.outputs.current }}
      PREVIOUS_VERSION: ${{ needs.version-manifest.outputs.previous }}
    steps:
      - name: Checkout
        uses: actions/checkout@e2f20e631ae6d7dd3b768f56a5d2af784dd54791 # tag=v2.5.0

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@ed3a0531877aca392eb870f440d9ae7aba83a6bd # v1.4.0
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
          terraform_wrapper: false

      - name: Setup Terragrunt
        run: |
          mkdir bin
          wget -O bin/terragrunt https://github.com/gruntwork-io/terragrunt/releases/download/v$TERRAGRUNT_VERSION/terragrunt_linux_amd64
          chmod +x bin/*
          echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH

      - name: Install Conftest
        run: |
          wget "https://github.com/open-policy-agent/conftest/releases/download/v${{ env.CONFTEST_VERSION }}/conftest_${{ env.CONFTEST_VERSION }}_Linux_x86_64.tar.gz" \
          && wget "https://github.com/open-policy-agent/conftest/releases/download/v${{ env.CONFTEST_VERSION }}/checksums.txt" \
          && grep 'Linux_x86_64.tar.gz' < checksums.txt | sha256sum --check  --status \
          && tar -zxvf "conftest_${{ env.CONFTEST_VERSION }}_Linux_x86_64.tar.gz" conftest \
          && mv conftest /usr/local/bin \
          && rm "conftest_${{ env.CONFTEST_VERSION }}_Linux_x86_64.tar.gz" checksums.txt
      # No dependencies
      - name: Terragrunt plan ecr
        uses: cds-snc/terraform-plan@8be66db9c815352044405fd33120b91918bf1f2e # tag=v2.3.1
        with:
          directory: "env/production/ecr"
          comment-delete: "true"
          comment-title: "Production: ecr"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          terragrunt: "true"

      - name: Terragrunt plan hosted_zone
        uses: cds-snc/terraform-plan@8be66db9c815352044405fd33120b91918bf1f2e # tag=v2.3.1
        with:
          directory: "env/production/hosted_zone"
          comment-delete: "true"
          comment-title: "Production: hosted_zone"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          terragrunt: "true"

      - name: Terragrunt plan kms
        uses: cds-snc/terraform-plan@8be66db9c815352044405fd33120b91918bf1f2e # tag=v2.3.1
        with:
          directory: "env/production/kms"
          comment-delete: "true"
          comment-title: "Production: kms"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          terragrunt: "true"

      - name: Terragrunt plan sqs
        uses: cds-snc/terraform-plan@8be66db9c815352044405fd33120b91918bf1f2e # tag=v2.3.1
        with:
          directory: "env/production/sqs"
          comment-delete: "true"
          comment-title: "Production: sqs"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          terragrunt: "true"

      - name: Terragrunt plan sns
        uses: cds-snc/terraform-plan@8be66db9c815352044405fd33120b91918bf1f2e # tag=v2.3.1
        with:
          directory: "env/production/sns"
          comment-delete: "true"
          comment-title: "Production: sns"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          terragrunt: "true"

      # Depends on kms
      - name: Terragrunt plan network
        uses: cds-snc/terraform-plan@8be66db9c815352044405fd33120b91918bf1f2e # tag=v2.3.1
        with:
          directory: "env/production/network"
          comment-delete: "true"
          comment-title: "Production: network"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          terragrunt: "true"

      - name: Terragrunt plan dynamodb
        uses: cds-snc/terraform-plan@8be66db9c815352044405fd33120b91918bf1f2e # tag=v2.3.1
        with:
          directory: "env/production/dynamodb"
          comment-delete: "true"
          comment-title: "Production: dynamodb"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          terragrunt: "true"

      # Depends on network
      - name: Terragrunt plan load_balancer
        uses: cds-snc/terraform-plan@8be66db9c815352044405fd33120b91918bf1f2e # tag=v2.3.1
        with:
          directory: "env/production/load_balancer"
          comment-delete: "true"
          comment-title: "Production: load_balancer"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          terragrunt: "true"

      - name: Terragrunt plan redis
        uses: cds-snc/terraform-plan@8be66db9c815352044405fd33120b91918bf1f2e # tag=v2.3.1
        with:
          directory: "env/production/redis"
          comment-delete: "true"
          comment-title: "Production: redis"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          terragrunt: "true"

      - name: Terragrunt plan rds
        uses: cds-snc/terraform-plan@8be66db9c815352044405fd33120b91918bf1f2e # tag=v2.3.1
        with:
          directory: "env/production/rds"
          comment-delete: "true"
          comment-title: "Production: rds"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          terragrunt: "true"

      # Depends on everything
      - name: Install Lambda deps
        run: ./aws/app/lambda/deps.sh install

      - name: Terragrunt plan app
        uses: cds-snc/terraform-plan@8be66db9c815352044405fd33120b91918bf1f2e # tag=v2.3.1
        with:
          directory: "env/production/app"
          comment-delete: "true"
          comment-title: "Production: app"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          terragrunt: "true"

      - name: Remove Lambda deps
        run: ./aws/app/lambda/deps.sh delete

      - name: Terragrunt plan alarms
        uses: cds-snc/terraform-plan@8be66db9c815352044405fd33120b91918bf1f2e # tag=v2.3.1
        with:
          directory: "env/production/alarms"
          comment-delete: "true"
          comment-title: "Production: alarms"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          terragrunt: "true"
