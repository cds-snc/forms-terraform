name: "Terragrunt plan SCRATCH"

on:
  pull_request:
    paths:
      - "aws/**"
      - "env/common/**"
      - "env/scratch/**"
      - ".github/workflows/terragrunt-apply-scratch.yml"

env:
  AWS_REGION: ca-central-1
  AWS_ACCESS_KEY_ID: ${{ secrets.SCRATCH_AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.SCRATCH_AWS_SECRET_ACCESS_KEY }}
  CONFTEST_VERSION: 0.27.0
  TERRAFORM_VERSION: 1.0.10
  TERRAGRUNT_VERSION: 0.35.6
  TF_INPUT: false

jobs:

  terragrunt-plan:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@3d8debd658c92063839bc97da5c2427100420dec # v1.3.2
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
          terraform_wrapper: false

      - name: Setup Terragrunt
        run: |
          mkdir bin
          wget -O bin/terragrunt https://github.com/gruntwork-io/terragrunt/releases/download/v$TERRAGRUNT_VERSION/terragrunt_linux_amd64
          chmod +x bin/*
          echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH

      - name: Install Conftest
        run: |
          wget "https://github.com/open-policy-agent/conftest/releases/download/v${{ env.CONFTEST_VERSION }}/conftest_${{ env.CONFTEST_VERSION }}_Linux_x86_64.tar.gz" \
          && wget "https://github.com/open-policy-agent/conftest/releases/download/v${{ env.CONFTEST_VERSION }}/checksums.txt" \
          && grep 'Linux_x86_64.tar.gz' < checksums.txt | sha256sum --check  --status \
          && tar -zxvf "conftest_${{ env.CONFTEST_VERSION }}_Linux_x86_64.tar.gz" conftest \
          && mv conftest /usr/local/bin \
          && rm "conftest_${{ env.CONFTEST_VERSION }}_Linux_x86_64.tar.gz" checksums.txt

      - uses: dorny/paths-filter@b2feaf19c27470162a626bd6fa8438ae5b263721 # v2.10.2
        id: filter
        with:
          filters: |
            common:
              - '.github/workflows/terragrunt-plan-scratch.yml'
              - 'env/common/**'
              - 'env/terragrunt.hcl'
              - 'env/scratch/env_vars.hcl'
            hosted_zone:
              - 'aws/hosted_zone/**'
              - 'env/scratch/hosted_zone/**'
            kms:
              - 'aws/kms/**'
              - 'env/scratch/kms/**'
            network:
              - 'aws/network/**'
              - 'env/scratch/network/**'

      # No dependencies
      - name: Terragrunt plan hosted_zone
        if: ${{ steps.filter.outputs.hosted_zone == 'true' || steps.filter.outputs.common == 'true' }}
        uses: cds-snc/terraform-plan@v2
        with:
          directory: "env/scratch/hosted_zone"
          comment-delete: "true"
          comment-title: "Scratch: hosted_zone"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          terragrunt: "true"

      - name: Terragrunt plan kms
        if: ${{ steps.filter.outputs.kms == 'true' || steps.filter.outputs.common == 'true' }}
        uses: cds-snc/terraform-plan@v2
        with:
          directory: "env/scratch/kms"
          comment-delete: "true"
          comment-title: "Scratch: kms"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          terragrunt: "true"

      # Depends on kms
      - name: Terragrunt plan network
        if: ${{ steps.filter.outputs.network == 'true' || steps.filter.outputs.common == 'true' }}
        uses: cds-snc/terraform-plan@v2
        with:
          directory: "env/scratch/network"
          comment-delete: "true"
          comment-title: "Scratch: network"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          terragrunt: "true"          
