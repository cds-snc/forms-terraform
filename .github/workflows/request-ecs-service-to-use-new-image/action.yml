name: Request ECS service to use new image

inputs:
  aws-role-to-assume:
    required: true
  aws-role-session-name:
    required: true
  aws-region:
    required: true
  ecs-cluster-name:
    required: true
  ecs-service-name:
    required: true
  ecs-task-def-name:
    required: true
  image-tag:
    required: true

runs:
  using: "composite"
  steps:
    - name: Configure AWS credentials using OIDC
      uses: aws-actions/configure-aws-credentials@7474bc4690e29a8392af63c5b98e7449536d5c3a # v4.3.1
      with:
        role-to-assume: ${{ inputs.aws-role-to-assume }}
        role-session-name: ${{ inputs.aws-role-session-name }}
        aws-region: ${{ inputs.aws-region }}

    - name: Login to Staging Amazon ECR
      id: login-ecr-staging
      uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2.0.1

    - name: Download ECS task definition
      shell: bash
      run: |
        aws ecs describe-task-definition \
        --task-definition ${{ inputs.ecs-service-name }} \
        --query taskDefinition > task-definition.json

    - name: Update ECS task image
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@5cb8c74c1b1ecaec4c8ea82eff82c009333509ce # v1.8.0
      with:
        task-definition: task-definition.json
        container-name: ${{ inputs.ecs-service-name }}
        image: "${{ steps.login-ecr-staging.outputs.registry }}/${{ inputs.image-tag }}"

    - name: Create the new ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@1beffbdddb3eb5f83c7a746c3e9bafeccdccbbaa # v2.4.0
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        cluster: ${{ inputs.ecs-cluster-name }}

    - name: Deploy the new ECS task definition
      shell: bash
      run: |
        aws ecs update-service \
          --cluster ${{ inputs.ecs-cluster-name }} \
          --service ${{ inputs.ecs-service-name }} \
          --task-definition ${{ inputs.ecs-task-def-name }} \
          --force-new-deployment > /dev/null 2>&1
        aws ecs wait services-stable \
          --cluster ${{ inputs.ecs-cluster-name }} \
          --services ${{ inputs.ecs-service-name }}
